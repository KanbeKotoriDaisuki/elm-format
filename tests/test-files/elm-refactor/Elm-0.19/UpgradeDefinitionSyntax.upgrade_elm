upgrade_A_value = ()
upgrade_A2_a2value = ()
upgrade_A3_a3value = "a3value"
upgrade_A_lambda = \a b -> a + b
upgrade_A_function a b = a + b

upgrade_A_Tag = ()
upgrade_A_Tag2 a b = a + b

upgrade_A_caseExhaustive a =
    case a of
        () -> 0
upgrade_A_caseWithPattern a =
    case a of
        Just x -> x
        Nothing -> 0
upgrade_A_caseWithWildcard a =
    case a of
        Nothing -> 0
        _ -> 99
upgrade_A_caseWithAsMatch ({ style } as config) =
    case style of
        A.Style1 ->
            "style1"
        _ ->
            ElmFix.todo style

type alias Upgrade_A_Type i o =
    A.NewType o i

type alias Upgrade_A3_A3Type =
    { a3type : () }

type alias Upgrade_B_OldType a b =
    B.NewType (a, b, b)
